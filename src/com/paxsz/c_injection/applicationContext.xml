<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- set方式注入: -->
    <bean name="user" class="com.paxsz.bean.User">
        <!--值类型注入: 为User对象中名为name的属性注入suqi作为值 -->
        <property name="name" value="suqi"/>
        <property name="age" value="22"/>
        <!-- 引用类型注入: 为car属性注入下方配置的car对象 -->
        <property name="car" ref="car"/>
    </bean>

    <!-- 将car对象配置到容器中 -->
    <bean name="car" class="com.paxsz.bean.Car">
        <property name="name" value="兰博基尼"/>
        <property name="color" value="蓝色"/>
    </bean>

    <!-- ============================================================ -->
    <!-- 构造函数注入 -->
    <bean name="user2" class="com.paxsz.bean.User">
        <constructor-arg name="name" index="0" type="java.lang.String" value="suqi"/>
        <constructor-arg name="car" ref="car" index="1"/>
    </bean>

    <!-- ============================================================ -->

    <!-- p名称空间注入, 走set方法
        1.导入P名称空间  xmlns:p="http://www.springframework.org/schema/p"
        2.使用p:属性完成注入
            |-值类型: p:属性名="值"
            |-对象类型: p:属性名-ref="bean名称"
     -->
    <bean name="user3" class="com.paxsz.bean.User" p:name="jack" p:age="22" p:car-ref="car"/>

    <!-- ============================================================ -->
    <!--
        spel注入: spring Expression Language sping表达式语言
     -->
    <bean name="user4" class="com.paxsz.bean.User">
        <property name="name" value="#{user.name}"/>
        <property name="age" value="#{user3.age}"/>
        <property name="car" ref="car"/>
    </bean>

    <!-- ============================================================ -->

    <!-- 复杂类型注入 -->
    <bean name="cb" class="com.paxsz.c_injection.CollectionBean">
        <!-- 如果数组中只准备注入一个值(对象),直接使用value|ref即可
        <property name="arr" value="tom" ></property>
        -->
        <!-- array注入,多个元素注入 -->
        <property name="arr">
            <array>
                <value>tom</value>
                <value>tom</value>
                <ref bean="user4"/>
            </array>
        </property>

        <!-- 如果List中只准备注入一个值(对象),直接使用value|ref即可
	    <property name="list" value="jack" ></property>-->
        <property name="list">
            <list>
                <value>jack</value>
                <value>rose</value>
                <ref bean="user3"/>
            </list>
        </property>
        <!-- map类型注入 -->
        <property name="map">
            <map>
                <entry key="url" value="jdbc:mysql:///crm"/>
                <entry key="user" value-ref="user4"/>
                <entry key-ref="user3" value-ref="user2"/>
            </map>
        </property>
        <!-- prperties 类型注入 -->
        <property name="prop">
            <props>
                <prop key="driverClass">com.jdbc.mysql.Driver</prop>
                <prop key="userName">root</prop>
                <prop key="password">1234</prop>
            </props>
        </property>
    </bean>

</beans>


